ps.whole2 <- ps.whole %>% rarefy_even_depth(rngseed=1, sample.size = 100)
ps.whole2
compute_read_counts(ps.whole2)
p2 <- alpha_div3(ps.whole2, measures)
p2
## Rarefaction with sample.size=1000
ps.whole3 <- ps.whole %>% rarefy_even_depth(rngseed=2, sample.size = 1000)
ps.whole3
compute_read_counts(ps.whole3)
p3 <- alpha_div3(ps.whole3, measures)
p3
ps.ovary <- subset_samples(ps.filter, Organ=="Ovary")
sample_data(ps.ovary)$Read_depth <- sample_sums(ps.ovary)
## change factors and order in metadata
metadata.ps <- data.frame(sample_data(ps.ovary))
levels(metadata.ps$Strain)
levels(metadata.ps$Strain) <- c(levels(metadata.ps$Strain), "Laboratory - Lavar")
metadata.ps$Strain[metadata.ps$Strain=="Lavar (labo)"] <- "Laboratory - Lavar"
levels(metadata.ps$Strain)
metadata.ps$Strain <- droplevels(metadata.ps$Strain)
levels(metadata.ps$Strain)
## update metadata in phyloseq object
sample_data(ps.ovary) <- metadata.ps
p1 <- plot_richness(ps.ovary,
x="Sample",
color="Strain",
measures=measures,
nrow = 1)
# extract data from richness plot to custom it
df <- p1$data
# changer levels and order of species and location for plot
levels(df$Species) <- c("AA", "CP", "CQ")
df$Species <- factor(df$Species, levels = c("AA", "CQ", "CP"))
new_location <- c("Field - Guadeloupe",
"Laboratory - Slab TC (Wolbachia -)",
"Field - Bosc",
"Field - Camping Europe",
"Laboratory - Lavar")
df$Strain <- factor(df$Strain, levels = new_location)
# final plot
p_ovary <- ggplot(df,aes(Species,value,colour=Strain)) +
facet_wrap(~ variable, drop=T,scale="free")+
scale_color_manual("Strain",
values=c("#00BF7D", "#A3A500", "#F8766D", "#00B0F6"),
labels = c("Field - Guadeloupe",
"Field - Bosc",
"Field - Camping Europe",
"Laboratory - Lavar"))+
geom_boxplot(outlier.colour = NA, alpha=0.8, position = position_dodge2(width=1, preserve="single")) +
geom_point(size=2, position=position_dodge(width=0.7, preserve='total'))+
labs(x="Species", y = "Alpha Diversity Measure")+
theme(legend.text.align = 0)
p_ovary
df_score <- data.frame(p$data)
x <- c("Culex pipiens - Field", "Culex pipiens - Bosc", "Culex pipiens - Camping Europe", "Culex pipiens - Lavar (lab)",
"Culex quinquefasciatus - Guadeloupe", "Culex quinquefasciatus - Slab TC",
"Aedes aegypti - Guadeloupe")
y <- c("Observed", "Chao1", "Shannon")
df <- data.frame(matrix(ncol=3, nrow=7))
rownames(df) <- x
colnames(df) <- y
# Aedes aegypti (from Guadeloupe)
df_score[df_score$Species=="AA" & df_score$variable=="Observed", "value"] %>% mean() -> df[7,1]
df_score[df_score$Species=="AA" & df_score$variable=="Chao1", "value"] %>% mean() -> df[7,2]
df_score[df_score$Species=="AA" & df_score$variable=="Shannon", "value"] %>% mean() -> df[7,3]
# Culex pipiens from field
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Field=="Field", "value"] %>% mean() -> df[1,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Field=="Field", "value"] %>% mean() -> df[1,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Field=="Field", "value"] %>% mean() -> df[1,3]
# Culex pipiens from labo
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,3]
# Culex pipiens from Bosc
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,3]
# Culex pipiens from Camping Europe
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,3]
# Culex quinquefasciatus from field (Guadeloupe)
df_score[df_score$Species=="CQ" & df_score$variable=="Observed" & df_score$Field=="Field", "value"] %>% mean() -> df[5,1]
df_score[df_score$Species=="CQ" & df_score$variable=="Chao1" & df_score$Field=="Field", "value"] %>% mean() -> df[5,2]
df_score[df_score$Species=="CQ" & df_score$variable=="Shannon" & df_score$Field=="Field", "value"] %>% mean() -> df[5,3]
# Culex quinquefasciatus from labo (Wolbachia-)
df_score[df_score$Species=="CQ" & df_score$variable=="Observed" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,1]
df_score[df_score$Species=="CQ" & df_score$variable=="Chao1" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,2]
df_score[df_score$Species=="CQ" & df_score$variable=="Shannon" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,3]
df %>%
kbl(booktable=TRUE) %>%
kable_paper("hover", full_width = F)
setwd(path_plot)
tiff("1Eb_MED_alpha_diversity.tiff", units="in", width=8, height=5, res=300)
p
dev.off()
png("1Eb_MED_alpha_diversity.png", units="in", width=8, height=5, res=300)
p
dev.off()
# Whole
df <- p$data
df_culex <- df[df$Species!="AA",]
df_pipiens <- df[df$Species=="CP",]
df_quinque <- df[df$Species=="CQ",]
# Whole rarefied (100)
df2 <- p2$data
df2_culex <- df2[df2$Species!="AA",]
df2_pipiens <- df2[df2$Species=="CP",]
df2_quinque <- df2[df2$Species=="CQ",]
# Whole rarefied (1000)
df3 <- p3$data
df3_culex <- df3[df3$Species!="AA",]
df3_pipiens <- df3[df3$Species=="CP",]
df3_quinque <- df3[df3$Species=="CQ",]
# Whole
df <- p$data
df_culex <- df[df$Species!="AA",]
df_pipiens <- df[df$Species=="CP",]
df_quinque <- df[df$Species=="CQ",]
# Whole rarefied (100)
df2 <- p2$data
df2_culex <- df2[df2$Species!="AA",]
df2_pipiens <- df2[df2$Species=="CP",]
df2_quinque <- df2[df2$Species=="CQ",]
# Whole rarefied (1000)
df3 <- p3$data
df3_culex <- df3[df3$Species!="AA",]
df3_pipiens <- df3[df3$Species=="CP",]
df3_quinque <- df3[df3$Species=="CQ",]
setwd(path_xlsx)
# names for final array
names <- c("Group", "Read_depth", "Group:Read_depth", "Residuals")
names2 <- c("Group", "Read_depth", "Residuals")
## Observed
df_observed <- df[df$variable=="Observed"  & df$Field!="Lab ",]
cat("OBSERVED\n\n")
# Construire le modèle linéaire
model  <- lm(value~ Strain, data = df_observed)
# Créer un QQ plot des résidus
ggpubr::ggqqplot(residuals(model))
# Calculer le test de normalité de Shapiro-Wilk
rstatix::shapiro_test(residuals(model))
# homogénéité de la variance
plot(model, 1)
#### Test de Levene
df_observed %>% rstatix::levene_test(value ~ Strain)
res.kruskal <- df_observed %>% rstatix::kruskal_test(value ~ Strain)
res.kruskal <- fill_significance(res.kruskal,"p")
res.kruskal
df_observed %>% rstatix::kruskal_effsize(value ~ Strain)
pwc <- df_observed %>%
rstatix::dunn_test(value ~ Strain, p.adjust.method = "bonferroni")
pwc
View(res.kruskal)
View(pwc)
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", res.kruskal, startCol = 1, startRow = 6, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
### Calculer le test de normalité de Shapiro-Wilk
shapiro <- rstatix::shapiro_test(residuals(model))
### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Strain)
View(levene)
View(shapiro)
### Tab with condition p-vals
df_cond <- data.frame(x=c("Conditions for ANOVA", "Normality", "Variance homogeneity"),
y=c("statistics", "p", "signif"))
View(df_cond)
### Tab with condition p-vals
df_cond <- data.frame(c("Conditions for ANOVA", "Normality", "Variance homogeneity"),
c("statistics", "p", "signif"))
View(df_cond)
### Tab with condition p-vals
x <- c("Conditions for ANOVA", "Normality", "Variance homogeneity")
y <- c("statistics", "p", "signif")
df_cond <- data.frame(x, y)
View(df_cond)
df <- data.frame(matrix(ncol = 3, nrow = 3))
View(df)
rownames(df_cond) <- x
colnames(df_cond) <- y
y <- c("statistics", "p", "signif")
colnames(df_cond) <- y
View(df_cond)
df_cond <- data.frame(matrix(ncol = 4, nrow = 3))
rownames(df_cond) <- x
colnames(df_cond) <- y
View(df_cond)
df_cond <- data.frame(matrix(ncol = 3, nrow = 3))
rownames(df_cond) <- x
colnames(df_cond) <- y
View(df_cond)
df_cond[1, "statistics"] <- shapiro$statistic
View(df_cond)
### Tab with condition p-vals
x <- c("Normality", "Variance homogeneity")
y <- c("statistics", "p", "signif")
df_cond <- data.frame(matrix(ncol = 3, nrow = 2))
rownames(df_cond) <- x
colnames(df_cond) <- y
df_cond[1, "statistics"] <- shapiro$statistic
View(df_cond)
df_cond[2, "statistics"] <- levene$statistic
View(shapiro)
shapiro <- fill_significance(res.kruskal,"p.value")
shapiro <- fill_significance(shapiro,"p.value")
View(levene)
levene <- fill_significance(levene,"p.value")
levene <- fill_significance(levene,"p")
df_cond[1, "statistics"] <- shapiro$statistic
df_cond[2, "statistics"] <- levene$statistic
df_cond[1, "p"] <- shapiro$p.value
df_cond[2, "p"] <- levene$p.value
df_cond[2, "p"] <- levene$p
df_cond[1, "signif"] <- shapiro$Significance
df_cond[2, "signif"] <- levene$Significance
View(df_cond)
# names for final array
names <- c("Group", "Read_depth", "Group:Read_depth", "Residuals")
names2 <- c("Group", "Read_depth", "Residuals")
## Observed
df_observed <- df[df$variable=="Observed"  & df$Field!="Lab ",]
cat("OBSERVED\n\n")
### Conditions pour ANOVA
#### Construire le modèle linéaire
model  <- lm(value~ Strain, data = df_observed)
## Observed
df_observed <- df[df$variable=="Observed"  & df$Field!="Lab ",]
cat("OBSERVED\n\n")
#### Construire le modèle linéaire
model  <- lm(value~ Strain, data = df_observed)
knitr::opts_chunk$set(echo = TRUE)
# Load main packages, paths and custom functions
source("../../../source/main_packages.R")
source("../../../source/paths.R")
source("../../../source/functions.R")
# Load supplementary packages
packages <- c("multcomp", "openxlsx", "kableExtra")
invisible(lapply(packages, require, character.only = TRUE))
setwd(path_rdata)
ps.filter <- readRDS("1D_MED_phyloseq_decontam.rds")
## whole samples
ps.whole <- subset_samples(ps.filter, Organ=="Whole")
## plot
### estimate alpha diversity
measures <- c("Observed", "Chao1", "Shannon")
p1 <- plot_richness(ps.whole,
x="Sample",
color="Strain",
measures=measures,
nrow = 1)
# extract data from richness plot to custom it
df <- p1$data
# changer levels and order of species and location for plot
levels(df$Species) <- c("AA", "CP", "CQ")
df$Species <- factor(df$Species, levels = c("AA", "CQ", "CP"))
new_location <- c("Field - Guadeloupe",
"Laboratory - Slab TC (Wolbachia -)",
"Laboratory - Lavar",
"Field - Bosc",
"Field - Camping Europe")
df$Strain <- factor(df$Strain, levels = new_location)
levels(df$Strain)
# final plot
p <- ggplot(df,aes(Species,value,colour=Strain)) +
facet_wrap(~ variable, drop=T,scale="free")+
scale_color_manual("Strain",
values=c("#00BF7D", "#5B6BF7", "#00B0F6", "#A3A500", "#F8766D"),
labels = c("Field - Guadeloupe",
expression(paste("Laboratory - Slab TC (", italic("Wolbachia"), " -)")),
"Laboratory - Lavar",
"Field - Bosc",
"Field - Camping Europe"))+
geom_boxplot(outlier.colour = NA, alpha=0.8, position = position_dodge2(width=1, preserve="single")) +
geom_point(size=2, position=position_dodge(width=0.7, preserve='total'))+
labs(x="Species", y = "Alpha Diversity Measure")+
theme(legend.text.align = 0)
p
# Rarefaction with sample.size=100
ps.whole2 <- ps.whole %>% rarefy_even_depth(rngseed=1, sample.size = 100)
ps.whole2
compute_read_counts(ps.whole2)
p2 <- alpha_div3(ps.whole2, measures)
p2
## Rarefaction with sample.size=1000
ps.whole3 <- ps.whole %>% rarefy_even_depth(rngseed=2, sample.size = 1000)
ps.whole3
compute_read_counts(ps.whole3)
p3 <- alpha_div3(ps.whole3, measures)
p3
ps.ovary <- subset_samples(ps.filter, Organ=="Ovary")
sample_data(ps.ovary)$Read_depth <- sample_sums(ps.ovary)
## change factors and order in metadata
metadata.ps <- data.frame(sample_data(ps.ovary))
levels(metadata.ps$Strain)
levels(metadata.ps$Strain) <- c(levels(metadata.ps$Strain), "Laboratory - Lavar")
metadata.ps$Strain[metadata.ps$Strain=="Lavar (labo)"] <- "Laboratory - Lavar"
levels(metadata.ps$Strain)
metadata.ps$Strain <- droplevels(metadata.ps$Strain)
levels(metadata.ps$Strain)
## update metadata in phyloseq object
sample_data(ps.ovary) <- metadata.ps
p1 <- plot_richness(ps.ovary,
x="Sample",
color="Strain",
measures=measures,
nrow = 1)
# extract data from richness plot to custom it
df <- p1$data
# changer levels and order of species and location for plot
levels(df$Species) <- c("AA", "CP", "CQ")
df$Species <- factor(df$Species, levels = c("AA", "CQ", "CP"))
new_location <- c("Field - Guadeloupe",
"Laboratory - Slab TC (Wolbachia -)",
"Field - Bosc",
"Field - Camping Europe",
"Laboratory - Lavar")
df$Strain <- factor(df$Strain, levels = new_location)
# final plot
p_ovary <- ggplot(df,aes(Species,value,colour=Strain)) +
facet_wrap(~ variable, drop=T,scale="free")+
scale_color_manual("Strain",
values=c("#00BF7D", "#A3A500", "#F8766D", "#00B0F6"),
labels = c("Field - Guadeloupe",
"Field - Bosc",
"Field - Camping Europe",
"Laboratory - Lavar"))+
geom_boxplot(outlier.colour = NA, alpha=0.8, position = position_dodge2(width=1, preserve="single")) +
geom_point(size=2, position=position_dodge(width=0.7, preserve='total'))+
labs(x="Species", y = "Alpha Diversity Measure")+
theme(legend.text.align = 0)
p_ovary
df_score <- data.frame(p$data)
x <- c("Culex pipiens - Field", "Culex pipiens - Bosc", "Culex pipiens - Camping Europe", "Culex pipiens - Lavar (lab)",
"Culex quinquefasciatus - Guadeloupe", "Culex quinquefasciatus - Slab TC",
"Aedes aegypti - Guadeloupe")
y <- c("Observed", "Chao1", "Shannon")
df <- data.frame(matrix(ncol=3, nrow=7))
rownames(df) <- x
colnames(df) <- y
# Aedes aegypti (from Guadeloupe)
df_score[df_score$Species=="AA" & df_score$variable=="Observed", "value"] %>% mean() -> df[7,1]
df_score[df_score$Species=="AA" & df_score$variable=="Chao1", "value"] %>% mean() -> df[7,2]
df_score[df_score$Species=="AA" & df_score$variable=="Shannon", "value"] %>% mean() -> df[7,3]
# Culex pipiens from field
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Field=="Field", "value"] %>% mean() -> df[1,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Field=="Field", "value"] %>% mean() -> df[1,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Field=="Field", "value"] %>% mean() -> df[1,3]
# Culex pipiens from labo
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Laboratory - Lavar", "value"] %>% mean() -> df[4,3]
# Culex pipiens from Bosc
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Field - Bosc", "value"] %>% mean() -> df[2,3]
# Culex pipiens from Camping Europe
df_score[df_score$Species=="CP" & df_score$variable=="Observed" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,1]
df_score[df_score$Species=="CP" & df_score$variable=="Chao1" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,2]
df_score[df_score$Species=="CP" & df_score$variable=="Shannon" & df_score$Strain=="Field - Camping Europe", "value"] %>% mean() -> df[3,3]
# Culex quinquefasciatus from field (Guadeloupe)
df_score[df_score$Species=="CQ" & df_score$variable=="Observed" & df_score$Field=="Field", "value"] %>% mean() -> df[5,1]
df_score[df_score$Species=="CQ" & df_score$variable=="Chao1" & df_score$Field=="Field", "value"] %>% mean() -> df[5,2]
df_score[df_score$Species=="CQ" & df_score$variable=="Shannon" & df_score$Field=="Field", "value"] %>% mean() -> df[5,3]
# Culex quinquefasciatus from labo (Wolbachia-)
df_score[df_score$Species=="CQ" & df_score$variable=="Observed" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,1]
df_score[df_score$Species=="CQ" & df_score$variable=="Chao1" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,2]
df_score[df_score$Species=="CQ" & df_score$variable=="Shannon" & df_score$Field=="Lab ", "value"] %>% mean() -> df[6,3]
df %>%
kbl(booktable=TRUE) %>%
kable_paper("hover", full_width = F)
setwd(path_plot)
tiff("1Eb_MED_alpha_diversity.tiff", units="in", width=8, height=5, res=300)
p
dev.off()
png("1Eb_MED_alpha_diversity.png", units="in", width=8, height=5, res=300)
p
dev.off()
# Whole
df <- p$data
df_culex <- df[df$Species!="AA",]
df_pipiens <- df[df$Species=="CP",]
df_quinque <- df[df$Species=="CQ",]
# Whole rarefied (100)
df2 <- p2$data
df2_culex <- df2[df2$Species!="AA",]
df2_pipiens <- df2[df2$Species=="CP",]
df2_quinque <- df2[df2$Species=="CQ",]
# Whole rarefied (1000)
df3 <- p3$data
df3_culex <- df3[df3$Species!="AA",]
df3_pipiens <- df3[df3$Species=="CP",]
df3_quinque <- df3[df3$Species=="CQ",]
# names for final array
names <- c("Group", "Read_depth", "Group:Read_depth", "Residuals")
names2 <- c("Group", "Read_depth", "Residuals")
## Observed
df_observed <- df[df$variable=="Observed"  & df$Field!="Lab ",]
cat("OBSERVED\n\n")
#### Construire le modèle linéaire
model  <- lm(value~ Strain, data = df_observed)
#### Créer un QQ plot des résidus
ggpubr::ggqqplot(residuals(model))
shapiro <- fill_significance(shapiro,"p.value")
#### Calculer le test de normalité de Shapiro-Wilk
shapiro <- rstatix::shapiro_test(residuals(model))
shapiro <- fill_significance(shapiro,"p.value")
#### Homogénéité de la variance
plot(model, 1)
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Strain)
levene <- fill_significance(levene,"p")
### Tab with condition p-vals
x <- c("Normality (Shapiro-Wilk)", "Homogeneity of variance (Levene's test")
y <- c("statistics", "p", "signif")
df_cond <- data.frame(matrix(ncol = 3, nrow = 2))
rownames(df_cond) <- x
colnames(df_cond) <- y
df_cond[1, "statistics"] <- shapiro$statistic
df_cond[2, "statistics"] <- levene$statistic
df_cond[1, "p"] <- shapiro$p.value
df_cond[2, "p"] <- levene$p
df_cond[1, "signif"] <- shapiro$Significance
df_cond[2, "signif"] <- levene$Significance
### Kruskal-Wallis
res.kruskal <- df_observed %>% rstatix::kruskal_test(value ~ Strain)
res.kruskal <- fill_significance(res.kruskal,"p")
res.kruskal
df_observed %>% rstatix::kruskal_effsize(value ~ Strain)
### Dunn's test
pwc <- df_observed %>%
rstatix::dunn_test(value ~ Strain, p.adjust.method = "bonferroni")
pwc
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "CONDITIONS FOR ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", df_cond, startCol = 1, startRow = 6, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "CONDITIONS FOR ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", df_cond, startCol = 1, startRow = 6, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Conditions not good for ANOVA", startCol = 1, startRow = 7, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Kruskal-Wallis", startCol = 1, startRow = 9, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", res.kruskal, startCol = 1, startRow = 10, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "CONDITIONS FOR ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", df_cond, startCol = 1, startRow = 6, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Conditions not good for ANOVA", startCol = 1, startRow = 7, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Kruskal-Wallis : ", startCol = 1, startRow = 9)
writeData(wb, "Alpha diversity (depth seq)", res.kruskal, startCol = 1, startRow = 10, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "CONDITIONS FOR ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", df_cond, startCol = 1, startRow = 6, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Conditions not good for ANOVA", startCol = 1, startRow = 10, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Kruskal-Wallis : ", startCol = 1, startRow = 11)
writeData(wb, "Alpha diversity (depth seq)", res.kruskal, startCol = 1, startRow = 12, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
wb <- createWorkbook()
addWorksheet(wb, "Alpha diversity (depth seq)")
writeData(wb, "Alpha diversity (depth seq)", "Effect of species in the field samples", startCol = 1, startRow = 1)
writeData(wb, "Alpha diversity (depth seq)", "OBSERVED INDEX", startCol = 1, startRow = 3)
writeData(wb, "Alpha diversity (depth seq)", "CONDITIONS FOR ANOVA:", startCol = 1, startRow = 5)
writeData(wb, "Alpha diversity (depth seq)", df_cond, startCol = 1, startRow = 6, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "Conditions not good for ANOVA", startCol = 1, startRow = 10, rowNames = TRUE)
writeData(wb, "Alpha diversity (depth seq)", "KRUSKALL-WALLIS: ", startCol = 1, startRow = 12)
writeData(wb, "Alpha diversity (depth seq)", res.kruskal, startCol = 1, startRow = 13, rowNames = TRUE)
saveWorkbook(wb, "Supplementary_Table_2_V2.xlsx", overwrite = TRUE)
#### Construire le modèle linéaire
model  <- lm(value~ Species*Read_depth, data = df_observed)
#### Créer un QQ plot des résidus
ggpubr::ggqqplot(residuals(model))
#### Calculer le test de normalité de Shapiro-Wilk
shapiro <- rstatix::shapiro_test(residuals(model))
shapiro <- fill_significance(shapiro,"p.value")
View(shapiro)
#### Homogénéité de la variance
plot(model, 1)
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Species*Read_depth)
df_observed %>% var.test(value ~ Species*Read_depth)
df_observed %>% var.test(value~ Species*Read_depth, data = df_observed)
df_observed %>% var.test(value~ Species, data = df_observed)
df_observed %>% var.test(value~Species*Read_depth, data = df_observed)
df_observed %>% bartlett.test(value~Species*Read_depth, data = df_observed)
View(df_observed)
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Species)
levene <- fill_significance(levene,"p")
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Species*Read_depth)
df_observed %>% bartlett.test(value~Read_depth, data = df_observed)
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Read_depth)
#### Test de Levene
levene <- df_observed %>% rstatix::levene_test(value ~ Read_depth*Species)
