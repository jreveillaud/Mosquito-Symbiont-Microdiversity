knitr::opts_chunk$set(echo = TRUE)
# Load main packages, paths and custom functions
source("../../../source/main_packages.R")
source("../../../source/paths.R")
source("../../../source/functions.R")
# Florentin CONSTANCIAS's script
source("https://raw.githubusercontent.com/fconstancias/DivComAnalyses/master/R/phyloseq_heatmap.R")
setwd(path_rdata)
ps <- readRDS("MED_phyloseq.rds")
ps.filter <- readRDS("1D_MED_phyloseq_decontam.rds")
change_organ(ps.filter)
change_species(ps.filter)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
subset_taxa(Genus == "Wolbachia") %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Species",
tax_add = NULL,
ntax  = 100) -> p
knitr::opts_chunk$set(echo = TRUE)
# Load main packages, paths and custom functions
source("../../../source/main_packages.R")
source("../../../source/paths.R")
source("../../../source/functions.R")
# Florentin CONSTANCIAS's script
source("https://raw.githubusercontent.com/fconstancias/DivComAnalyses/master/R/phyloseq_heatmap.R")
setwd(path_rdata)
ps <- readRDS("MED_phyloseq.rds")
ps.filter <- readRDS("1D_MED_phyloseq_decontam.rds")
change_organ(ps.filter)
change_species(ps.filter)
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free"),
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0, 100),
labels = c(0, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p1
p1
View(p1)
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0, 100),
labels = c(0, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance (pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0, 100),
labels = c(0, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
subset_taxa(Genus == "Wolbachia") %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Species",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free") +
theme(axis.text.y = element_text(face="italic", angle = 0,  size = 12))+
scale_fill_viridis_c(breaks = c(0, 25, 50, 75, 100),
labels = c(0, 25, 50, 75, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p2
p2[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p2
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
subset_taxa(Genus == "Wolbachia") %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Species",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free") +
theme(axis.text.y = element_text(face="italic", angle = 0,  size = 12))+
scale_fill_viridis_c(
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p2
p2[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p2
scales::pseudo_log_trans(100)
pseudo_log(100)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
subset_taxa(Genus == "Wolbachia") %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Species",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free") +
theme(axis.text.y = element_text(face="italic", angle = 0,  size = 12))+
scale_fill_viridis_c(breaks = c(0,  0.01, 1, 10, 100),
labels = c(0,  0.01, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p2
p2[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p2
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 1, 10, 100),
labels = c(0,  0.01, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma = 0.001),
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(),
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma=0.1), # Scaling factor for the linear part of pseudo-log transformation
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma=0.01), # Scaling factor for the linear part of pseudo-log transformation
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma=0.001), # Scaling factor for the linear part of pseudo-log transformation
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
subset_taxa(Genus == "Wolbachia") %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Species",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free") +
theme(axis.text.y = element_text(face="italic", angle = 0,  size = 12))+
scale_fill_viridis_c(breaks = c(0,  0.01, 1, 10, 100),
labels = c(0,  0.01, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma = 1),
na.value = 'transparent') -> p2
p2[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p2
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma=1), # Scaling factor for the linear part of pseudo-log transformation
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans)"
p1
physeq <- ps.filter
colnames(tax_table(physeq))[7] <- "Strain"
levels(physeq@sam_data$Species) <- c("AA", "CP", "CQ")
# levels(physeq@sam_data$Species)
levels(physeq@sam_data$Location) <- c("B", "CE", "G", "L", "W-")
# levels(physeq@sam_data$Location)
physeq %>%
transform_sample_counts(function(x) x/sum(x) *100) %>%
phyloseq_ampvis_heatmap(transform = FALSE,
group_by = "SampleID",
facet_by = c("Location", "Organ", "Field", "Species" ),
tax_aggregate = "Genus",
tax_add = NULL,
ntax  = 100) -> p
p + facet_grid( ~ Species + Location + Organ + Field , scales = "free", space = "free")+
scale_fill_viridis_c(breaks = c(0,  0.01, 0.1, 1, 10, 100),
labels = c(0,  0.01, 0.1, 1, 10, 100),
trans = scales::pseudo_log_trans(sigma=0.001), # Scaling factor for the linear part of pseudo-log transformation
na.value = 'transparent') -> p1
p1[["labels"]][["fill"]] <- "Read abundance \n(pseudo log trans sigma=0.001)"
p1
